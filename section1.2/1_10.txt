(A 1 10)
1024
Which is 2^10

(A 2 4)
65536
Which is 2^16

(A 3 3)
65536

(define (f n) (A 0 n))
This computers 2n.

(define (g n) (A 1 n))
This computes 2^n.

(define (h n) (A 2 n))

(h 0) -> 0
(A 2 0)
0

(h 1) -> 2 or 2^1
(A 2 1)
2

(h 2) -> 4 or 2^2
(A 2 2)
(A 1 (A 2 1))
(A 1 2)
(A 0 (A 1 1))
(A 0 2)
(* 2 2)
4

(h 3) -> 16 or 2^4
(A 2 3)
(A 1 (A 2 2))
(A 1 (A 1 (A 2 1)))
(A 1 (A 1 2))
(A 1 (A 0 (A 1 1)))
(A 1 (A 0 2))
(A 1 (* 2 2))
(A 1 4)
(A 0 (A 1 3))
(A 0 (A 0 (A 1 2)))
(A 0 (A 0 (A 0 (A 1 1))))
(A 0 (A 0 (A 0 2)))
(A 0 (A 0 4))
(A 0 8)
16

(h 4) -> 65536 or 2^16
(h 5) -> ??? Some crazy huge number

It appears that:
(h n) = 2 ^ (h (- n 1))

(h 3) = 2 ^ (h 2)
      = 2 ^ 2 ^ (h 1)
      = 2 ^ 2 ^ 2

(h 4) = 2 ^ (h 3)
      = 2 ^ 2 ^ (h 2)
      = 2 ^ 2 ^ 2 ^ (h 1)
      = 2 ^ 2 ^ 2 ^ 2

(h 5) = 2 ^ h(4)
     = 2 ^ 2 ^ h(3)
     = 2 ^ 2 ^ 2 ^ h(2)
     = 2 ^ 2 ^ 2 ^ 2 ^ h(1)
     = 2 ^ 2 ^ 2 ^ 2 ^ 2
And so on...

So (h n) is 2 raised to itself n times.
I've learned this is called a teteration of 2.
It seems the mathematical notation for this is sorta opposite of
exponentiation.  Sorta like n^2, but n would be the superscript.
