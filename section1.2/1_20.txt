(define (gcd a b)
  (if (= b 0)
      a
      (gcd b (remainder a b))))

;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Normal order evaluation ;
;;;;;;;;;;;;;;;;;;;;;;;;;;;
(gcd 206 40)
(if (= 40 0)
  206
  (gcd 40 (remainder 206 40)))
(gcd 40 (remainder 206 40))
;;; 1 ;;;
(gcd 40 6)
(if (= 6 0)
  40
  (gcd 6 (remainder 40 6)))
(gcd 6 (remainder 40 6))
;;; 2 ;;;
(gcd 6 4)
(if (= 4 0)
  6
  (gcd 4 (remainder 6 4)))
(gcd 4 (remainder 6 4))
;;; 3 ;;;
(gcd 4 2)
(if (= 2 0)
  4
  (gcd 2 (remainder 4 2)))
(gcd 2 (remainder 4 2))
;;; 4 ;;;
(gcd 2 0)
(if (= 0 0)
  2
  (gcd 0 (remainder 2 0)))
2

So for normal order, the remainder function is evaluated 4 times.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Applicative order evaluation ;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
(gcd 206 40)
(if (= 40 0)
  206
  (gcd 40 (remainder 206 40)))
(gcd 40 (remainder 206 40))
(if (= (remainder 206 40) 0)
  40
  (gcd (remainder 206 40) (remainder 40 (remainder 206 40))))
;;; 1 ;;;
(if (= 6 0)
  40
  (gcd (remainder 206 40) (remainder 40 (remainder 206 40))))
(gcd (remainder 206 40) (remainder 40 (remainder 206 40)))
(if (= (remainder 40 (remainder 206 40)) 0)
  (remainder 206 40)
  (gcd (remainder 40 (remainder 206 40))
       (remainder (remainder 206 40) (remainder 40 (remainder 206 40)))))
;;; 2 ;;;
(if (= (remainder 40 6) 0)
  (remainder 206 40)
  (gcd (remainder 40 (remainder 206 40))
       (remainder (remainder 206 40) (remainder 40 (remainder 206 40)))))
;;; 3 ;;;
(if (= 4 0)
  (remainder 206 40)
  (gcd (remainder 40 (remainder 206 40))
       (remainder (remainder 206 40) (remainder 40 (remainder 206 40)))))
(gcd (remainder 40 (remainder 206 40))
     (remainder (remainder 206 40) (remainder 40 (remainder 206 40))))
(if (= (remainder (remainder 206 40) (remainder 40 (remainder 206 40))) 0)
  (remainder 40 (remainder 206 40))
  (gcd (remainder (remainder 206 40) (remainder 40 (remainder 206 40)))
       (remainder (remainder 40 (remainder 206 40))
                  (remainder (remainder 206 40) (remainder 40 (remainder 206 40)))
;;; 4 ;;;
(if (= (remainder (remainder 206 40) (remainder 40 6)) 0)
  (remainder 40 (remainder 206 40))
  (gcd (remainder (remainder 206 40) (remainder 40 (remainder 206 40)))
       (remainder (remainder 40 (remainder 206 40))
                  (remainder (remainder 206 40) (remainder 40 (remainder 206 40)))
;;; 5 ;;;
(if (= (remainder (remainder 206 40) 4) 0)
  (remainder 40 (remainder 206 40))
  (gcd (remainder (remainder 206 40) (remainder 40 (remainder 206 40)))
       (remainder (remainder 40 (remainder 206 40))
                  (remainder (remainder 206 40) (remainder 40 (remainder 206 40)))
;;; 6 ;;;
(if (= (remainder 6 4) 0)
  (remainder 40 (remainder 206 40))
  (gcd (remainder (remainder 206 40) (remainder 40 (remainder 206 40)))
       (remainder (remainder 40 (remainder 206 40))
                  (remainder (remainder 206 40) (remainder 40 (remainder 206 40)))
;;; 7 ;;;
(if (= 2 0)
  (remainder 40 (remainder 206 40))
  (gcd (remainder (remainder 206 40) (remainder 40 (remainder 206 40)))
       (remainder (remainder 40 (remainder 206 40))
                  (remainder (remainder 206 40) (remainder 40 (remainder 206 40)))
(gcd (remainder (remainder 206 40) (remainder 40 (remainder 206 40)))
     (remainder (remainder 40 (remainder 206 40))
                (remainder (remainder 206 40) (remainder 40 (remainder 206 40)))
(if (= (remainder (remainder 40 (remainder 206 40))
                  (remainder (remainder 206 40) (remainder 40 (remainder 206 40)))
       0)
  (remainder (remainder 206 40) (remainder 40 (remainder 206 40)))

And it seems like I screwed it all up at this point.  I get the point though.  It's a lot more evaluations of the remainder function.











